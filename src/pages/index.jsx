import styles from "../styles/Home.module.scss";

import { useEffect, useState } from "react";
import { getSession } from "next-auth/react";
import { useRouter } from "next/router";
import { HTTP_GET } from "../../libs/HTTP";

import Head from "next/head";
import Header from "../components/header";
import Slider from "../components/slider";
import TabButton from "../components/tabButton";
import EventList from "../components/eventList";
import NavBar from "../components/navBar";
import Footer from "../components/footer";
import Pageable from "../components/pageable";
import Loader from "../components/loader";

const Home = ({ session }) => {
  const [selectedTab, setSelectedTab] = useState("Museec");
  const [categories, setCategories] = useState([]);
  const [events, setEvents] = useState([]);
  const [isLoading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    if (!localStorage.getItem("intro")) router.push("/intro");

    const getCategories = async () => {
      const categories = await HTTP_GET("categories");
      setCategories(categories.data);
    };
    getCategories();
  }, []);

  useEffect(() => {
    setLoading(true);
    const getEvents = async () => {
      const events = await HTTP_GET(
        `events/getEventsByCategory?category=${selectedTab}&page=1`
      );
      setEvents(events);
      setLoading(false);
    };
    getEvents();
  }, [selectedTab]);

  const handlePageChange = async (pageNumber) => {
    const events = await HTTP_GET(
      `events/getEventsByCategory?category=${selectedTab}&page=${pageNumber}`
    );
    setEvents(events);
    setLoading(false);
  };

  const handleSelect = (selectedButton) => {
    setSelectedTab(selectedButton);
  };

  return (
    <>
      <Head>
        <title>Moveeda</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header userType={session?.user?.type} />
        <Slider />
        <section className={styles.SectionTab}>
          {categories.map((category, key) => (
            <TabButton
              key={category._id}
              color={category.color}
              onSelect={() => handleSelect(category.name)}
            >
              {category.name.toUpperCase()}
            </TabButton>
          ))}
        </section>
        {!isLoading ? (
          <>
            <EventList events={events.data} title={selectedTab} />
            <Pageable
              pagesNumber={events?.totalPages}
              page={events?.currentPage}
              setPage={handlePageChange}
            />
          </>
        ) : (
          <Loader />
        )}
        <NavBar userType={session?.user?.type} userId={session?.users?.id} />
        <Footer />
      </main>
    </>
  );
};

export async function getServerSideProps(context) {
  return {
    props: {
      session: await getSession(context),
    },
  };
}

export default Home;
